/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Forms;

import Configs.Connections;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hikma
 */
public class DataPegawai extends javax.swing.JPanel {

    /**
     * Creates new form DataPegawai
     */
    
    private Connection conn;
    private int selectedId = 0;
    
    public DataPegawai() {
        initComponents();
         conn = Connections.getConnection();
           // Kondisi awal: Simpan aktif, Ubah non-aktif
        Store.setEnabled(true);
        update.setEnabled(false);
        tampilData("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        destroy = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        nama = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        golongan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pangkat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nip = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jabatan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jenis_kelamin = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        alamat = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        tempat_lahir = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tanggal_lahir_calender = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        agama = new javax.swing.JComboBox<>();
        Store = new javax.swing.JButton();
        update = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_pegawai = new javax.swing.JTable();
        cetak = new javax.swing.JButton();
        cari = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        destroy.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        destroy.setText("Hapus");
        destroy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destroyActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        nama.setColumns(10);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Nama");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("NIP");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Pangkat");

        pangkat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pangkatActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Golongan");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Jabatan");

        jabatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jabatanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Jenis Kelamin");

        jenis_kelamin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "laki-laki", "perempuan" }));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Alamat");

        alamat.setColumns(20);
        alamat.setRows(5);
        jScrollPane2.setViewportView(alamat);

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setText("Tempat Lahir");

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("Tanggal Lahir");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("Agama");

        agama.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "islam", "kristen", "katolik", "budha", "hindu" }));

        Store.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Store.setText("Simpan");
        Store.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        update.setText("Ubah");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agama, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempat_lahir)
                    .addComponent(jScrollPane2)
                    .addComponent(jenis_kelamin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jabatan)
                    .addComponent(nip)
                    .addComponent(pangkat)
                    .addComponent(golongan)
                    .addComponent(nama, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(tanggal_lahir_calender, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Store, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(golongan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pangkat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jenis_kelamin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempat_lahir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tanggal_lahir_calender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Store)
                    .addComponent(update))
                .addGap(18, 18, 18)
                .addComponent(reset)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tabel_pegawai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "no", "id", "nama", "nip", "pangkat", "golongan", "jabatan", "jenis kelamin", "alamat", "tempat lahir", "tanggal lahir", "agama"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel_pegawai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_pegawaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_pegawai);

        cetak.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cetak.setText("Cetak");
        cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakActionPerformed(evt);
            }
        });

        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cariKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cetak)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cetak))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 89, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(destroy)
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(destroy)
                .addGap(554, 554, 554))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void tampilData(String keyword) {
    // Buat model tabel
    DefaultTableModel model = new DefaultTableModel();
    
    // Tambahkan nama kolom sesuai kebutuhan
    model.addColumn("No");
    model.addColumn("ID");
    model.addColumn("Nama");
    model.addColumn("NIP");
    model.addColumn("Pangkat");
    model.addColumn("Golongan");
    model.addColumn("Jabatan");
    model.addColumn("Jenis Kelamin");
    model.addColumn("Alamat");
    model.addColumn("Tempat Lahir");
    model.addColumn("Tanggal Lahir");
    model.addColumn("Agama");
    
    // Koneksi ke database, SELECT data
    try {
        Statement stmt = conn.createStatement();
        String sql = "SELECT * FROM pegawai WHERE nama LIKE '%" + keyword + "%' OR nip LIKE '%" + keyword + "%'";
        
        ResultSet rs = stmt.executeQuery(sql);
        
        int no = 1; // Untuk penomoran baris
        while (rs.next()) {
            // Ambil data per kolom
            int id = rs.getInt("id");
            String nama = rs.getString("nama");
            String nip = rs.getString("nip");
            String pangkat = rs.getString("pangkat");
            String golongan = rs.getString("golongan");
            String jabatan = rs.getString("jabatan");
            String jenis_kelamin = rs.getString("jenis_kelamin");
            String alamat = rs.getString("alamat");
            String tempat_lahir = rs.getString("tempat_lahir");
            String tanggal_lahir = rs.getString("tanggal_lahir");
            String agama = rs.getString("agama");
            
            // Tambahkan ke model tabel
            model.addRow(new Object[]{
                no++, 
                id, 
                nama, 
                nip, 
                pangkat, 
                golongan,
                jabatan,
                jenis_kelamin,
                alamat,
                tempat_lahir,
                tanggal_lahir,
                agama
            });
        }
        
        // Tampilkan model ke tblPegawai
        tabel_pegawai.setModel(model);
        
    } catch (SQLException e) {
        e.printStackTrace();
//        JOptionPane.showMessageDialog(this, "Terjadi error: " + e.getMessage());
    }
}
    
    
    
    
private void cetakData() {
    try {
        // Anda bisa menambahkan judul (header) dan footer jika mau
        MessageFormat header = new MessageFormat("Data Pegawai");
        MessageFormat footer = new MessageFormat("Halaman {0}");
        
        // Mencetak tabel
        boolean complete = tabel_pegawai.print(
                JTable.PrintMode.FIT_WIDTH, // Atur agar tabel menyesuaikan lebar kertas
                header, 
                footer
        );
        
        if (complete) {
            JOptionPane.showMessageDialog(this, "Printing Selesai!");
        } else {
            JOptionPane.showMessageDialog(this, "Printing Dibatalkan!");
        }
    } catch (PrinterException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi error saat mencetak: " + e.getMessage());
    }
}
    
    private void cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakActionPerformed
        // TODO add your handling code here:
        cetakData();
    }//GEN-LAST:event_cetakActionPerformed

    private void tabel_pegawaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_pegawaiMouseClicked
        // TODO add your handling code here:
        int row = tabel_pegawai.getSelectedRow();
        if (row != -1) {
            Store.setEnabled(false);
            update.setEnabled(true);
            // Ambil ID dari kolom 1 (atau sesuaikan dengan struktur tabel Anda)
            selectedId = Integer.parseInt(tabel_pegawai.getValueAt(row, 1).toString());
            // Asumsi kolom "ID" ada di indeks 1, "Nama" di 2, "NIP" di 3, dsb.
            String namaStr = tabel_pegawai.getValueAt(row, 2).toString();
            String nipStr = tabel_pegawai.getValueAt(row, 3).toString();
            String pangkatStr = tabel_pegawai.getValueAt(row, 4).toString();
            String golonganStr = tabel_pegawai.getValueAt(row, 5).toString();
            String jabatanStr = tabel_pegawai.getValueAt(row, 6).toString();
            String jenisKelaminStr = tabel_pegawai.getValueAt(row, 7).toString();
            String alamatStr = tabel_pegawai.getValueAt(row, 8).toString();
            String tempatLahirStr = tabel_pegawai.getValueAt(row, 9).toString();
            String tanggalLahirStr = tabel_pegawai.getValueAt(row, 10).toString();
            String agamaStr = tabel_pegawai.getValueAt(row, 11).toString();

            // Tampilkan di text field
            nama.setText(namaStr);
            nip.setText(nipStr);
            pangkat.setText(pangkatStr);
            golongan.setText(golonganStr);
            jabatan.setText(jabatanStr);
            jenis_kelamin.setSelectedItem(jenisKelaminStr);
            alamat.setText(alamatStr);
            tempat_lahir.setText(tempatLahirStr);
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            try {
                Date tanggal = sdf.parse(tanggalLahirStr); // Konversi String ke Date
                tanggal_lahir_calender.setDate(tanggal);
            } catch (ParseException ex) {
                Logger.getLogger(DataPegawai.class.getName()).log(Level.SEVERE, null, ex);
            }
          
            agama.setSelectedItem(agamaStr);
        }
    }//GEN-LAST:event_tabel_pegawaiMouseClicked

    private void jabatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jabatanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jabatanActionPerformed

    private void pangkatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pangkatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pangkatActionPerformed

     private void simpanData() {
    // Ambil nilai dari text field
    String namaPegawai = nama.getText();
    String nipPegawai = nip.getText();
    String pangkatPegawai = pangkat.getText();
    String golonganPegawai = golongan.getText();
    String jabatanPegawai = jabatan.getText();
    String jenisKelaminPegawai = jenis_kelamin.getSelectedItem().toString();
    String alamatPegawai = alamat.getText();
    String tempatLahirPegawai = tempat_lahir.getText();
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String tanggalLahirPegawai = sdf.format(tanggal_lahir_calender.getDate());
    String agamaPegawai = agama.getSelectedItem().toString();

    // Validasi sederhana (misal cek kosong)
    if (namaPegawai.isEmpty() || nipPegawai.isEmpty() ||
        pangkatPegawai.isEmpty() || golonganPegawai.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Data belum lengkap!");
        return;
    }

    // Lakukan koneksi dan simpan ke database
    try {
        String sql = "INSERT INTO pegawai (nama, nip, pangkat, golongan,jabatan,jenis_kelamin,alamat,tempat_lahir,tanggal_lahir,agama) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, namaPegawai);
        stmt.setString(2, nipPegawai);
        stmt.setString(3, pangkatPegawai);
        stmt.setString(4, golonganPegawai);
        stmt.setString(5, jabatanPegawai);
        stmt.setString(6, jenisKelaminPegawai);
        stmt.setString(7, alamatPegawai);
        stmt.setString(8, tempatLahirPegawai);
        stmt.setString(9, tanggalLahirPegawai);
        stmt.setString(10, agamaPegawai);

        stmt.executeUpdate();
        
        // Panggil tampilData() supaya tabel langsung ter-refresh
        tampilData("");
        
        // Beri notifikasi ke user
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
        
        // (Opsional) Kosongkan kembali text field
        nama.setText("");
        nip.setText("");
        pangkat.setText("");
        golongan.setText("");

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
    }
}

     
    private void StoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreActionPerformed
        // TODO add your handling code here:
        simpanData();
    }//GEN-LAST:event_StoreActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        Store.setEnabled(true);
        update.setEnabled(false);
        nama.setText("");
        nip.setText("");
        pangkat.setText("");
        golongan.setText("");
        jabatan.setText("");
        jenis_kelamin.setSelectedIndex(-1);
        alamat.setText("");
        tempat_lahir.setText("");
        tanggal_lahir.setText("");
        agama.setSelectedIndex(-1);
        tabel_pegawai.clearSelection();
    }//GEN-LAST:event_resetActionPerformed

    private void updateData() {
    // Pastikan user sudah memilih data (id tidak kosong)
    if (selectedId == 0) {
        JOptionPane.showMessageDialog(this, "Pilih data yang akan di-update dari tabel!");
        return;
    }
    
    // Ambil data baru dari text field
    String namaPegawai = nama.getText();
    String nipPegawai = nip.getText();
    String pangkatPegawai = pangkat.getText();
    String golonganPegawai = golongan.getText();
    String jabatanPegawai = jabatan.getText();
    String jenisKelmainPegawai = jenis_kelamin.getSelectedItem().toString();
    String alamatPegawai = alamat.getText();
    String tempatLahirPegawai = tempat_lahir.getText();
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String tanggalLahirPegawai = sdf.format(tanggal_lahir_calender.getDate());
    String agamaPegawai = agama.getSelectedItem().toString();
    
    // Validasi sederhana
    if (namaPegawai.isEmpty() || nipPegawai.isEmpty() ||
        pangkatPegawai.isEmpty() || golonganPegawai.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Data belum lengkap!");
        return;
    }
    
    // Lakukan UPDATE ke database
    try  {
        String sql = "UPDATE pegawai SET "
           + "nama = ?, nip = ?, pangkat = ?, golongan = ?, "
           + "jabatan = ?, jenis_kelamin = ?, alamat = ?, "
           + "tempat_lahir = ?, tanggal_lahir = ?, agama = ? "
           + "WHERE id = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, namaPegawai);
        stmt.setString(2, nipPegawai);
        stmt.setString(3, pangkatPegawai);
        stmt.setString(4, golonganPegawai);
        stmt.setString(5, jabatanPegawai);
        stmt.setString(6, jenisKelmainPegawai);
        stmt.setString(7, alamatPegawai);
        stmt.setString(8, tempatLahirPegawai);
        stmt.setString(9, tanggalLahirPegawai);
        stmt.setString(10, agamaPegawai);
        stmt.setInt(11, selectedId);
        
        stmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data berhasil di-update!");
        
        // Refresh tabel
        tampilData("");
        
        // Kosongkan text field (opsional)
        nama.setText("");
        nip.setText("");
        pangkat.setText("");
        golongan.setText("");
        jabatan.setText("");
        alamat.setText("");
        jenis_kelamin.setSelectedIndex(-1);
        tempat_lahir.setText("");
        tanggal_lahir.setText("");
        agama.setSelectedIndex(-1);
        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal update data: " + e.getMessage());
    }
}
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        updateData();
    }//GEN-LAST:event_updateActionPerformed
    
     private void hapusData() {
    // Pastikan user sudah memilih baris di tabel
    int row = tabel_pegawai.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data di tabel terlebih dahulu!");
        return;
    }

    // Ambil nilai kolom "ID" dari baris yang dipilih
    // Asumsi: Kolom "ID" ada di indeks 1 (No=0, ID=1, Nama=2, dst.)
    String idStr = tabel_pegawai.getValueAt(row, 1).toString();
    
    // Tampilkan dialog konfirmasi
    int confirm = JOptionPane.showConfirmDialog(
        this, 
        "Yakin hapus data ini?", 
        "Konfirmasi", 
        JOptionPane.YES_NO_OPTION
    );
    
    // Jika user pilih "Yes", baru eksekusi hapus
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            String sql = "DELETE FROM pegawai WHERE id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, Integer.parseInt(idStr));
            stmt.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
            
            // Refresh tabel setelah data terhapus
            tampilData("");
            
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menghapus data: " + e.getMessage());
        }
    }
}
        
    private void destroyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destroyActionPerformed
        // TODO add your handling code here:
        hapusData();
    }//GEN-LAST:event_destroyActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cariActionPerformed

    private void cariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cariKeyPressed
        // TODO add your handling code here:
        String keyword = cari.getText();
        tampilData(keyword); // Panggil fungsi pencarian
    }//GEN-LAST:event_cariKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Store;
    private javax.swing.JComboBox<String> agama;
    private javax.swing.JTextArea alamat;
    private javax.swing.JTextField cari;
    private javax.swing.JButton cetak;
    private javax.swing.JButton destroy;
    private javax.swing.JTextField golongan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jabatan;
    private javax.swing.JComboBox<String> jenis_kelamin;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField nip;
    private javax.swing.JTextField pangkat;
    private javax.swing.JButton reset;
    private javax.swing.JTable tabel_pegawai;
    private com.toedter.calendar.JDateChooser tanggal_lahir_calender;
    private javax.swing.JTextField tempat_lahir;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
